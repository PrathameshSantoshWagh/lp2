#include <iostream>
#include <vector>
#include <queue>
#include <unordered_set>

using namespace std;

class Graph {
    int V; // Number of vertices
    vector<vector<int>> adj; // Adjacency list

public:
    Graph(int V) : V(V), adj(V) {}

    void addEdge(int u, int v) {
        adj[u].push_back(v);
        adj[v].push_back(u); // For undirected graph
    }

    void dfsUtil(int v, vector<bool>& visited) {
        visited[v] = true;
        cout << v << " ";

        for (int u : adj[v]) {
            if (!visited[u]) {
                dfsUtil(u, visited);
            }
        }
    }

    void dfs(int start) {
        vector<bool> visited(V, false);
        dfsUtil(start, visited);
    }

    void bfs(int start) {
        vector<bool> visited(V, false);
        queue<int> q;

        visited[start] = true;
        q.push(start);

        while (!q.empty()) {
            int v = q.front();
            q.pop();
            cout << v << " ";

            for (int u : adj[v]) {
                if (!visited[u]) {
                    visited[u] = true;
                    q.push(u);
                }
            }
        }
    }
};

int main() {
    int V, E;
    cout << "Enter the number of vertices and edges: ";
    cin >> V >> E;

    Graph g(V);

    cout << "Enter the edges (format: u v):" << endl;
    for (int i = 0; i < E; ++i) {
        int u, v;
        cin >> u >> v;
        g.addEdge(u, v);
    }

    int start;
    cout << "Enter the starting vertex for DFS and BFS: ";
    cin >> start;

    cout << "DFS traversal starting from vertex " << start << ": ";
    g.dfs(start);
    cout << endl;

    cout << "BFS traversal starting from vertex " << start << ": ";
    g.bfs(start);
    cout << endl;

    return 0;
}
//Enter the number of vertices and edges: 5 6
Enter the edges (format: u v):
0 1
0 2
1 3
1 4
2 4
3 40 1

0 2

1 3

1 4

2 4

3 4
Enter the starting vertex for DFS and BFS: 
0
DFS traversal starting from vertex 0: 0 1 3 4 2 
BFS traversal starting from vertex 0: 0 1 2 3 4 


